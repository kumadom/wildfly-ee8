apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-deploy-pipeline
spec:
  workspaces: 
    - name: shared-workspace
    - name: kubeconfig-dir
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
      default: "master"
    - name: image
      type: string
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.git-url)
        - name: deleteExisting
          value: "true"
        - name: revision
          value: $(params.git-revision)
    - name: build-push-image
      taskRef:
        name: buildah
      params:
        - name: IMAGE
          value: $(params.image)
        - name: DOCKERFILE
          value: "Dockerfile"
        - name: CONTEXT
          value: "$(workspaces.source.path)"
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - fetch-repository
    - name: deploy-application
      taskRef:
        name: kubernetes-actions
      params:
        - name: image
          value: bitnami/kubectl:1.20
        - name: script
          value: |
            IMAGE=$(echo "$(params.image)" | sed -e 's/\//\\\//g')
            cat ./config/deployment.yaml | sed -e "s/myapp:latest/$IMAGE/g" -e "s/Never/IfNotPresent/g" > /tmp/new-deployment.yaml
            cat /tmp/new-deployment.yaml
            echo "-----------"
            kubectl apply -f /tmp/new-deployment.yaml
            echo "-----------"
            kubectl get deploy
            kubectl get pods             
      workspaces:
        - name: manifest-dir
          workspace: shared-workspace
        - name: kubeconfig-dir
          workspace: kubeconfig-dir
      runAfter:
        - build-push-image
